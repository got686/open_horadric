"""
Generated by open_horadric. DO NOT EDIT!
"""

from __future__ import annotations

from typing import Any
from typing import Iterable
from typing import List
import logging

from open_horadric_lib.client.client import BaseClient
import google.protobuf.empty_pb2

from example_py3.foo.bar.messages import TestMessage
import example_py3.google.protobuf.messages

__all__ = ('TestServiceClient',)


class TestServiceClient(BaseClient):
    __slots__ = (
        '_test_method',
        '_client_streaming',
        '_server_streaming',
        '_client_server_streaming',
        '_empty_method',
    )

    logger = logging.getLogger('example_py3.foo.bar.client.TestService')

    def __init__(self, channel, middlewares=None, credentials=None):
        super().__init__(channel=channel, middlewares=middlewares, credentials=credentials)

        self._test_method = self._wrap_method(
            self.channel.unary_unary(
                '/foo.bar.TestService/TestMethod',
                request_serializer=TestMessage.SerializeToString,
                response_deserializer=TestMessage.TestNestedMessage.FromString,
            )
        )

        self._client_streaming = self._wrap_method(
            self.channel.stream_unary(
                '/foo.bar.TestService/ClientStreaming',
                request_serializer=TestMessage.SerializeToString,
                response_deserializer=TestMessage.TestNestedMessage.FromString,
            )
        )

        self._server_streaming = self._wrap_method(
            self.channel.unary_stream(
                '/foo.bar.TestService/ServerStreaming',
                request_serializer=TestMessage.SerializeToString,
                response_deserializer=TestMessage.TestNestedMessage.FromString,
            )
        )

        self._client_server_streaming = self._wrap_method(
            self.channel.stream_stream(
                '/foo.bar.TestService/ClientServerStreaming',
                request_serializer=TestMessage.TestNestedMessage.SerializeToString,
                response_deserializer=TestMessage.TestNestedMessage.FromString,
            )
        )

        self._empty_method = self._wrap_method(
            self.channel.unary_unary(
                '/foo.bar.TestService/EmptyMethod',
                request_serializer=example_py3.google.protobuf.messages.Empty.SerializeToString,
                response_deserializer=example_py3.google.protobuf.messages.Empty.FromString,
            )
        )

    def __repr__(self):
        return '{}({})'.format(self.__class__.__name__, self.channel)

    __str__ = __repr__

    def test_method(
            self,
            request: TestMessage = None,
            timeout: float = None,
            metadata: List[str] = None,
            credentials: Any = None,
    ) -> TestMessage.TestNestedMessage:
        return self._test_method(
            request=request if request is not None else google.protobuf.empty_pb2.Empty(),
            timeout=timeout,
            metadata=metadata,
            credentials=credentials,
        )

    def client_streaming(
            self,
            request: Iterable[TestMessage] = None,
            timeout: float = None,
            metadata: List[str] = None,
            credentials: Any = None,
    ) -> TestMessage.TestNestedMessage:
        return self._client_streaming(
            request=request if request is not None else google.protobuf.empty_pb2.Empty(),
            timeout=timeout,
            metadata=metadata,
            credentials=credentials,
        )

    def server_streaming(
            self,
            request: TestMessage = None,
            timeout: float = None,
            metadata: List[str] = None,
            credentials: Any = None,
    ) -> Iterable[TestMessage.TestNestedMessage]:
        return self._server_streaming(
            request=request if request is not None else google.protobuf.empty_pb2.Empty(),
            timeout=timeout,
            metadata=metadata,
            credentials=credentials,
        )

    def client_server_streaming(
            self,
            request: Iterable[TestMessage.TestNestedMessage] = None,
            timeout: float = None,
            metadata: List[str] = None,
            credentials: Any = None,
    ) -> Iterable[TestMessage.TestNestedMessage]:
        return self._client_server_streaming(
            request=request if request is not None else google.protobuf.empty_pb2.Empty(),
            timeout=timeout,
            metadata=metadata,
            credentials=credentials,
        )

    def empty_method(
            self,
            request: example_py3.google.protobuf.messages.Empty = None,
            timeout: float = None,
            metadata: List[str] = None,
            credentials: Any = None,
    ) -> example_py3.google.protobuf.messages.Empty:
        return self._empty_method(
            request=request if request is not None else google.protobuf.empty_pb2.Empty(),
            timeout=timeout,
            metadata=metadata,
            credentials=credentials,
        )

